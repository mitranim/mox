;; Archive of ideas which seem unlikely to be implemented. ;;

;;
## Blocks as struct literals?

Unlikely proto-concept. If scopes are structs, the inverse is true
and we can use struct literals for blocks. This example pictures an
inner block, but the same could be applied to module root.

Reasons this is unlikely:
- Redundant with blocks. Having 2 options is bad.
- Unintuitive to newcomers.
- Complicates the internals (since regular blocks are required anyway).
- Seems incompatible with early returns, which we'd like to encourage.
;;

val = do.{
  one = 10

  ;;
  The field name `_` tells the compiler to discard this.
  This side effect runs exactly once.
  ;;
  _ = stdout.println.[`intermediary value: ` one]

  two = (one + 20)
}
log.(val.one) ;; 10 ;;
log.(val.two) ;; 30 ;;

;; ...But how do you perform conditionals for early returns? ;;
{
  one   = operation0
  two   = operation1
  ret   = one
  three = operation2
  ret   = three
}
