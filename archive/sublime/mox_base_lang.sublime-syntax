%YAML 1.2
---
version: 2
extends: Packages/mox/mox_base.sublime-syntax
scope: source.mox

variables:
  # TODO consider dropping.
  ident_type: \b[[:upper:]][[:alnum:]_]*\b
  # TODO consider dropping.
  ident_const: \b[[:upper:]][[:upper:][:digit:]_]*[[:upper:]][[:upper:][:digit:]_]*\b
  ident_control: \b(?:try(?:_[{{ident_chars}}]*)?|do|ret|break|continue|end|if|cond|when|then|else)\b
  ident_blank: \b_\b
  fn_break: '->(?!{{operator}})'
  accessor: \.(?!{{operator}})
  caller: ':(?!{{operator}})'

  # Flexible convention for declaration "keywords".
  def_word: \b(?:def|defn|defun|defunc|def_[{{ident_chars}}]*)\b

contexts:
  op-match:
    - meta_prepend: true
    - include: accessor-match

  accessor-match:
    - match: '{{accessor}}'
      scope: punctuation.accessor.mox

  ident-match:
    - meta_prepend: true
    - include: ident-call-match
    - include: ident-const-predeclared-match
    # - include: ident-const-match
    # - include: ident-type-match
    - include: ident-blank-match
    - include: ident-other-match

  ident-call-match: []

  ident-const-predeclared-match:
    - match: \b(?:true|false|nil)\b
      scope: constant.language.mox

  # # TODO consider dropping.
  # ident-const-match:
  #   - match: '{{ident_const}}'
  #     scope: variable.other.constant.mox

  # # TODO consider dropping.
  # ident-type-match:
  #   - match: '{{ident_type}}'
  #     scope: storage.type.mox

  ident-blank-match:
    - match: '{{ident_blank}}'
      scope: variable.language.blank.mox

  # Used by subsyntaxes.
  prefix-namespace-match:
    # Buggy when `entity` may also contain `accessor`.
    - match: '({{entity}})\s*({{accessor}})'
      captures:
        1: variable.other.mox
        2: punctuation.accessor.mox
